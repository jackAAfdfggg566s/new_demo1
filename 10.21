如果你在 echo 里没看到变量，大概率是 变量没有在当前 shell 展开，或者被引号屏蔽了。

最常见的问题是这一类 👇

echo "${MY_VAR}"

在 远端容器 里没展开，因为这是在 sh -c "..." 这层里被当字面量处理了。


---

✅ 正确做法：变量在本机先展开，再传到 pod

例如：

run_date="2025-10-20"
kubectl exec pod-name -- sh -c "echo $run_date"

✅ 这样可以
变量 $run_date 在 本机 展开后变成字符串再传进去


---

❌ 错误例子：变量被双引号保护住，没展开

kubectl exec pod-name -- sh -c "echo \"$run_date\""

在某些 shell 情况下 $run_date 会在远端再展开，此时如果远端没有这个变量 => 变成空


---

✅ 最推荐写法（完整）

run_date=$(psql ... 查询SQL ...)
kubectl exec -i pod-name -- sh -c "echo run -d $run_date | java -jar /app/cli.jar"


---

如果你是这样写的：

kubectl exec -i pod-name -- sh -c "echo \"run -d ${run_date}\" | java -jar /app/cli.jar"

就会导致：

${run_date} 被 当字面字符串 而不是变量

因为被内层引号保护住



---

🔧 解决方式

只要把变量放在外层，shell 就会展开：

✅ 正确：

kubectl exec -i pod-name -- sh -c "echo run -d $run_date | java -jar /app/cli.jar"

❌ 常见错误：

kubectl exec -i pod-name -- sh -c "echo \"run -d ${run_date}\" | java -jar /app/cli.jar"


---

如果还看不到，我给你一个调试命令：

echo "run -d $run_date"

如果本机这里就不对，那就是变量没取到；
如果本机对，进 pod 不对，就是引号问题。


---

要不要我帮你直接改成你当前那条命令的正确版本？

只需要发我你现在那条失败的命令，我帮你改成能运行的 ✅
复制粘贴到回复即可。

