To achieve the goal of creating a role in AWS CloudWatch and setting up an event rule to send RDS events to Amazon EventBridge using Terraform, you need to perform the following steps:

Steps:

1. Create an IAM Role for CloudWatch Events: This role will allow CloudWatch Events to invoke actions (e.g., send events to EventBridge).


2. Create a CloudWatch Events Rule: This rule will be triggered by RDS events.


3. Create an EventBridge Rule: This rule will send the RDS events to EventBridge.



Terraform Configuration

Hereâ€™s how to do it using Terraform.

1. Create the IAM Role

We need to create an IAM role that CloudWatch Events can assume to forward events to EventBridge.

resource "aws_iam_role" "cloudwatch_event_role" {
  name = "cloudwatch_event_role"

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Principal = {
          Service = "events.amazonaws.com"
        }
      }
    ]
  })
}

resource "aws_iam_policy" "cloudwatch_event_policy" {
  name        = "cloudwatch_event_policy"
  description = "Policy for CloudWatch Events to send to EventBridge"

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action   = "events:PutEvents"
        Effect   = "Allow"
        Resource = "*"
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "cloudwatch_event_policy_attachment" {
  role       = aws_iam_role.cloudwatch_event_role.name
  policy_arn = aws_iam_policy.cloudwatch_event_policy.arn
}

2. Create the CloudWatch Events Rule

Now, we will create the CloudWatch Events rule to capture RDS events and forward them to EventBridge.

resource "aws_cloudwatch_event_rule" "rds_event_rule" {
  name        = "rds_event_rule"
  description = "Capture RDS events and forward them to EventBridge"
  event_pattern = jsonencode({
    source = ["aws.rds"]
    detail-type = ["RDS DB Event"]
  })
}

3. Create the EventBridge Rule

EventBridge allows you to capture events and forward them to targets like Lambda, SNS, or SQS. Here, we will set the EventBridge rule to capture the RDS events from CloudWatch.

resource "aws_cloudwatch_event_target" "eventbridge_target" {
  rule      = aws_cloudwatch_event_rule.rds_event_rule.name
  arn       = "arn:aws:events:REGION:ACCOUNT_ID:event-bus/default"  # Replace REGION and ACCOUNT_ID with your actual values
  role_arn  = aws_iam_role.cloudwatch_event_role.arn
}

Full Terraform Configuration

Here is the complete Terraform configuration that combines the IAM role, policy, CloudWatch Events rule, and EventBridge target.

provider "aws" {
  region = "us-west-2"  # Replace with your region
}

resource "aws_iam_role" "cloudwatch_event_role" {
  name = "cloudwatch_event_role"

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Principal = {
          Service = "events.amazonaws.com"
        }
      }
    ]
  })
}

resource "aws_iam_policy" "cloudwatch_event_policy" {
  name        = "cloudwatch_event_policy"
  description = "Policy for CloudWatch Events to send to EventBridge"

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action   = "events:PutEvents"
        Effect   = "Allow"
        Resource = "*"
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "cloudwatch_event_policy_attachment" {
  role       = aws_iam_role.cloudwatch_event_role.name
  policy_arn = aws_iam_policy.cloudwatch_event_policy.arn
}

resource "aws_cloudwatch_event_rule" "rds_event_rule" {
  name        = "rds_event_rule"
  description = "Capture RDS events and forward them to EventBridge"
  event_pattern = jsonencode({
    source = ["aws.rds"]
    detail-type = ["RDS DB Event"]
  })
}

resource "aws_cloudwatch_event_target" "eventbridge_target" {
  rule      = aws_cloudwatch_event_rule.rds_event_rule.name
  arn       = "arn:aws:events:us-west-2:123456789012:event-bus/default"  # Replace REGION and ACCOUNT_ID with your actual values
  role_arn  = aws_iam_role.cloudwatch_event_role.arn
}

Notes:

Replace REGION and ACCOUNT_ID with your actual AWS region and account ID in the EventBridge target ARN.

Ensure that the EventBridge event bus exists. You can create a custom event bus if needed or use the default event bus.

The role cloudwatch_event_role allows the CloudWatch Events service to send events to EventBridge.


Apply Terraform

Once you've written this configuration, run the following commands to apply the Terraform configuration:

terraform init    # Initialize Terraform
terraform plan    # See the changes that will be applied
terraform apply   # Apply the changes to your AWS account

This will set up a CloudWatch event rule to capture RDS events and forward them to EventBridge using the role you've defined.

