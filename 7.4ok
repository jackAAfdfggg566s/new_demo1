你现在的关键问题是：

> 配置文件在 GitLab 本地内容没问题，一 scp 到远程机器，虽然文件内容“看起来一样”，但从中读取路径变量后 -f 判断就失败。




---

✅ 极可能是这个问题：

🔥 config.yml 在 GitLab CI 中是 Windows / CRLF 格式或编码问题，scp 到远程后含有隐藏字符（如 \r），导致路径变量不对！

比如你配置文件内容是：

log_path: /var/logs/app.log

但如果有隐藏的 \r 或非 UNIX 换行符：

log_path: /var/logs/app.log\r

就会导致：

[ -f "/var/logs/app.log\r" ]  # 判断失败


---

✅ 快速验证方法

在远端机器上运行：

cat -A /tmp/config.yml

示例输出（含有 ^M 就是 \r）：

log_path: /var/logs/app.log^M$


---

✅ 解决方法一：清洗 config.yml 文件中的换行符

在 CI 脚本中上传前，先清理换行符（确保是 Unix LF）：

dos2unix config.yml  # 如果 runner 有 dos2unix 命令

或使用 sed 清除 \r：

sed -i 's/\r//' config.yml


---

✅ 解决方法二：远端读取变量时清除 \r

你也可以在读取字段时清洗：

log_path=$(grep "^log_path" /tmp/config.yml | awk -F": " '{print $2}' | tr -d '\r' | xargs)

然后再判断：

if [ -f "$log_path" ]; then
  echo "文件存在"
else
  echo "文件不存在: [$log_path]"
fi


---

✅ 最推荐结构（在 .gitlab-ci.yml 中）：

script:
  - echo "准备上传配置文件"
  - sed -i 's/\r//' config.yml     # 删除 \r，兼容 Windows 格式
  - scp config.yml user@remote:/tmp/config.yml

  - echo "远程运行：读取路径并 tail"
  - ssh user@remote '
      log_path=$(grep "^log_path" /tmp/config.yml | awk -F": " "{print \$2}" | tr -d "\r" | xargs)
      echo "路径是：[\$log_path]"
      if [ ! -f "\$log_path" ]; then
        echo "文件不存在：\$log_path"
        ls -l "\$log_path"
        exit 1
      fi
      tail -f "\$log_path"
    '


---

🧪 如果仍然失败，请提供：

1. 你在本地看到的 config.yml 内容（贴几行）


2. 远端运行 cat -A /tmp/config.yml 的输出


3. echo "[$log_path]" 的实际输出



我可以精准判断是哪种字符污染，立即解决。需要我写一个脚本自动判断并修复这些格式问题吗？

