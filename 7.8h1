你想做的功能是：


---

> ✅ 使用 GitLab Scheduler 定时触发 主 pipeline，
✅ 自动执行 .gitlab-ci.yml 中定义的 run_cycle1 / run_cycle2 / run_cycle3，
✅ 并把变量（例如 CYCLE_ID）传给子 pipeline .gitlab/cycle.yml。




---

好消息是：GitLab 完全支持你要的这个结构！
下面我手把手给你配置完整的 .gitlab-ci.yml 和 cycle.yml，支持：

✅ Features:

Scheduler 触发

调用 .gitlab/cycle.yml 三次

每次传入不同的 CYCLE_ID=1/2/3

子 pipeline 中可以用 $CYCLE_ID



---

✅ 第一步：主 pipeline .gitlab-ci.yml

stages:
  - cycle1
  - cycle2
  - cycle3

run_cycle1:
  stage: cycle1
  trigger:
    include: .gitlab/cycle.yml
    strategy: depend
    forward:
      pipeline_variables: true
  variables:
    CYCLE_ID: "1"

run_cycle2:
  stage: cycle2
  trigger:
    include: .gitlab/cycle.yml
    strategy: depend
    forward:
      pipeline_variables: true
  variables:
    CYCLE_ID: "2"

run_cycle3:
  stage: cycle3
  trigger:
    include: .gitlab/cycle.yml
    strategy: depend
    forward:
      pipeline_variables: true
  variables:
    CYCLE_ID: "3"


---

✅ 第二步：子 pipeline .gitlab/cycle.yml

stages:
  - start
  - monitor

start_java:
  stage: start
  script:
    - echo "🚀 启动 Java 程序，第 $CYCLE_ID 轮"
    # 启动命令 + 输出日志路径中可以加 $CYCLE_ID

monitor:
  stage: monitor
  script:
    - echo "🔍 监控日志 for CYCLE_ID=$CYCLE_ID"
    - echo "🧪 模拟监控完成 ✅"

> 👉 在 cycle.yml 中你可以用 $CYCLE_ID 来生成不同日志名、打印不同状态，做完全独立的监控逻辑。




---

✅ 第三步：设置 GitLab Scheduler

你现在去 GitLab 项目里设置 Scheduler：

1. 👉 打开项目 > CI / CD > Schedules


2. ➕ 创建一个 Schedule


3. 设置执行时间（例如每天凌晨 2 点）


4. 选择目标分支


5. ✅ ✅ 保持默认，无需设置变量（我们变量是给子 pipeline传的）



只要这个定时器触发了主 pipeline，GitLab 会自动：

顺序运行 run_cycle1 → run_cycle2 → run_cycle3

每次调用 .gitlab/cycle.yml

子 pipeline 拿到 $CYCLE_ID 来做独立处理



---

✅ 效果示意图：

🔁 Scheduler 每晚触发主 pipeline

.gitlab-ci.yml
|
├── run_cycle1 (CYCLE_ID=1)
|     └─ includes .gitlab/cycle.yml
|
├── run_cycle2 (CYCLE_ID=2)
|     └─ includes .gitlab/cycle.yml
|
└── run_cycle3 (CYCLE_ID=3)
      └─ includes .gitlab/cycle.yml


---

✅ 常见问题

问题	答案

子 pipeline 怎么用变量？	直接 $CYCLE_ID，因为 forward: pipeline_variables: true
可以跳过某个 cycle 吗？	可以用 rules: + if: $CYCLE_ID == "2" 等判断
可以并发跑 cycle 吗？	是的，只要你让 run_cycle1/2/3 用同一个 stage: 或加 parallel:
可以设置外层变量？	可以，Scheduler 支持设置顶层变量传给 .gitlab-ci.yml，再传到子 pipeline



---

✅ 如果你还希望：

在子 pipeline 中使用传进来的变量生成不同的日志名（如 log1.log, log2.log）

在 cycle.yml 中判断是否为最后一轮再跑 state3 检查

子 pipeline 报错时主 pipeline 立刻终止


我可以帮你进一步封装好。

是否需要我给你一个能直接复制粘贴的 .gitlab-ci.yml 和 .gitlab/cycle.yml 两文件完整版？

