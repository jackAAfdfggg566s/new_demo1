Document: Role and Permission Management System for AWS FIS (Fault Injection Simulator)

Table of Contents

1. Introduction


2. Role and Permission Overview in AWS FIS

2.1 What are Roles in AWS FIS?

2.2 What are Permissions in AWS FIS?



3. Role and Permission Structure in AWS FIS

3.1 Role Hierarchy in AWS FIS

3.2 Permissions Assignment in AWS FIS



4. Types of Roles in AWS FIS

4.1 AWS FIS Admin Role

4.2 AWS FIS Experimenter Role

4.3 AWS FIS Viewer Role

4.4 Custom Roles



5. Permissions in AWS FIS

5.1 Read Permissions

5.2 Write Permissions

5.3 Execute Permissions

5.4 Admin Permissions



6. Automatic Role Assignment in AWS FIS

6.1 Overview of Automatic Role Assignment

6.2 Triggers for Automatic Role Assignment

6.3 Benefits of Automatic Role Assignment



7. Automatic Permission Assignment in AWS FIS

7.1 Overview of Automatic Permission Assignment

7.2 Conditional Permission Assignment

7.3 Benefits of Automatic Permission Assignment



8. Security Considerations in AWS FIS

8.1 Role-Based Access Control (RBAC) in AWS FIS

8.2 Least Privilege Principle in AWS FIS

8.3 Auditing and Monitoring



9. Best Practices for Role and Permission Management in AWS FIS

9.1 Consistency in Role Definition

9.2 Regular Role Audits

9.3 Minimizing Role and Permission Overlap



10. Conclusion




---

1. Introduction

This document outlines the role and permission management system for AWS Fault Injection Simulator (AWS FIS). It covers the roles and permissions required to manage and execute fault injection experiments, the automation of these assignments, and security best practices within the AWS FIS service.

2. Role and Permission Overview in AWS FIS

2.1 What are Roles in AWS FIS?

In AWS FIS, roles define the set of permissions that are granted to users or services to perform specific actions related to fault injection experiments. Roles are used to manage access to different actions within the service and control who can start, manage, and monitor experiments.

2.2 What are Permissions in AWS FIS?

Permissions in AWS FIS specify the actions a user can perform within the service. These permissions cover the ability to create and execute fault injection experiments, modify experiment templates, view results, and manage resources involved in the experiments.

3. Role and Permission Structure in AWS FIS

3.1 Role Hierarchy in AWS FIS

In AWS FIS, roles are structured hierarchically based on levels of access:

Administrator roles have full access to all aspects of AWS FIS.

Experimenter roles allow users to create and manage experiments but do not have full administrative control.

Viewer roles allow users to view experiment results without modifying the experiments or their configurations.


3.2 Permissions Assignment in AWS FIS

Permissions in AWS FIS are granted based on user roles. When a user is assigned a specific role, the associated permissions are automatically assigned. Roles are managed through AWS Identity and Access Management (IAM), where permissions are defined for different resources and actions within AWS FIS.

4. Types of Roles in AWS FIS

4.1 AWS FIS Admin Role

The AWS FIS Admin role provides full access to all features and functions of the service. Users in this role can create, manage, and terminate experiments, modify experiment templates, and configure the service settings. Admins also manage other user roles and permissions.

4.2 AWS FIS Experimenter Role

Users with the Experimenter role can create, modify, and execute fault injection experiments. This role is typically assigned to teams responsible for running chaos engineering experiments. However, experimenters cannot modify service configurations or assign roles.

4.3 AWS FIS Viewer Role

The Viewer role provides read-only access to AWS FIS resources. Users with this role can view ongoing and completed experiments and their results but cannot create or modify experiments.

4.4 Custom Roles

Custom roles allow organizations to tailor access to specific needs. For example, a custom role might allow a user to view certain experiment logs without full read/write access to the entire system.

5. Permissions in AWS FIS

5.1 Read Permissions

Read permissions allow users to view experiment results, experiment configurations, logs, and other related resources without making any changes. These permissions are typically granted to users in the Viewer role.

5.2 Write Permissions

Write permissions allow users to modify or create new resources, such as fault injection experiments, templates, and resource configurations. Experimenters and administrators typically require these permissions.

5.3 Execute Permissions

Execute permissions grant users the ability to start or stop fault injection experiments. These permissions are crucial for experimenters who need to trigger chaos engineering experiments on AWS resources.

5.4 Admin Permissions

Admin permissions provide complete control over AWS FIS. This includes creating and managing experiment templates, assigning roles and permissions, configuring IAM policies for FIS, and managing all experiment executions and results.

6. Automatic Role Assignment in AWS FIS

6.1 Overview of Automatic Role Assignment

Automatic role assignment allows organizations to automatically assign roles to users based on specific criteria, such as job title, department, or security clearance. This ensures that users are granted appropriate access levels based on their responsibilities.

6.2 Triggers for Automatic Role Assignment

Automatic role assignment can be triggered by events such as:

User onboarding (when new users are added to AWS FIS)

Changes in job roles (such as when a user is promoted to experimenter or admin)

Integration with AWS Single Sign-On (SSO) to manage role assignments based on organizational structure


6.3 Benefits of Automatic Role Assignment

Reduces administrative burden by automating role management

Ensures consistency in role assignment based on predefined policies

Reduces human error and security risks related to incorrect role assignment


7. Automatic Permission Assignment in AWS FIS

7.1 Overview of Automatic Permission Assignment

When a role is assigned to a user, corresponding permissions are automatically granted based on predefined permission policies. This ensures that users have the necessary permissions to perform their tasks without the need for manual intervention.

7.2 Conditional Permission Assignment

Permissions can be conditionally assigned based on specific circumstances, such as:

Time-bound permissions (e.g., experiment access only within working hours)

Resource-based permissions (e.g., specific permissions granted only to certain AWS services or resources involved in the experiment)

Role-specific conditions (e.g., only users in the “Experimenter” role can trigger experiments)


7.3 Benefits of Automatic Permission Assignment

Ensures permissions are granted consistently and in accordance with defined policies

Reduces the risk of privilege escalation or unauthorized access

Simplifies management of complex access requirements across large teams


8. Security Considerations in AWS FIS

8.1 Role-Based Access Control (RBAC) in AWS FIS

Role-Based Access Control (RBAC) is crucial in AWS FIS for managing access to resources. By defining clear roles with distinct permissions, organizations can enforce security and ensure that users only have access to the resources necessary for their role.

8.2 Least Privilege Principle in AWS FIS

The least privilege principle ensures that users are granted only the minimum permissions required to perform their tasks. This principle is critical in AWS FIS to limit exposure to sensitive configurations and prevent accidental or malicious changes to fault injection experiments.

8.3 Auditing and Monitoring

AWS FIS integrates with AWS CloudTrail and AWS CloudWatch for continuous monitoring and logging of user actions. Regular audits should be conducted to ensure that only authorized users are executing experiments, and any unauthorized activities are detected and addressed promptly.

9. Best Practices for Role and Permission Management in AWS FIS

9.1 Consistency in Role Definition

It is essential to define roles clearly and consistently to ensure users are granted the appropriate level of access. Roles should align with organizational structures and job functions.

9.2 Regular Role Audits

Conduct regular audits to review role and permission assignments, ensuring they are still aligned with organizational needs and security policies. This helps identify outdated or unnecessary roles and permissions.

9.3 Minimizing Role and Permission Overlap

Minimize overlap between roles to reduce complexity. Each role should have a clearly defined set of responsibilities and permissions to prevent confusion and ensure effective management.

10. Conclusion

Effective role and permission management in AWS FIS is essential for ensuring secure and efficient fault injection experiments. By automating role and permission assignments and adhering to security best practices, organizations can manage user access more effectively while maintaining the integrity of their testing environments. Proper role management also ensures compliance and accountability while reducing administrative overhead.

