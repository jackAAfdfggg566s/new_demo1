当然可以，我们可以把两个函数都放在同一个 functions.sh 文件中：


---

✅ functions.sh 示例（双向映射：IP ↔ 名称，编号 ↔ IP）

# functions.sh

# 传入 IP，返回名称
get_name_by_ip() {
  local ip="$1"
  case "$ip" in
    192.168.1.1) echo "host-a" ;;
    192.168.1.2) echo "host-b" ;;
    192.168.1.3) echo "host-c" ;;
    192.168.1.4) echo "host-d" ;;
    *) echo "unknown" ;;
  esac
}

# 传入编号（1-4），返回对应 IP
get_ip_by_index() {
  local index="$1"
  case "$index" in
    1) echo "192.168.1.1" ;;
    2) echo "192.168.1.2" ;;
    3) echo "192.168.1.3" ;;
    4) echo "192.168.1.4" ;;
    *) echo "0.0.0.0" ;;
  esac
}


---

✅ .gitlab-ci.yml 示例用法

stages:
  - test

test-job:
  stage: test
  script:
    - source ./functions.sh

    # 示例：根据编号拿 IP
    - ip=$(get_ip_by_index 2)
    - echo "编号2对应IP: $ip"

    # 示例：根据 IP 拿名称
    - name=$(get_name_by_ip "$ip")
    - echo "IP $ip 对应名称: $name"


---

✅ 输出效果示例：

编号2对应IP: 192.168.1.2
IP 192.168.1.2 对应名称: host-b


---

如需扩展，只需在 functions.sh 中扩展 case 语句即可。你还可以：

通过变量循环编号 1-4 调用 IP 名称

将函数放入项目或共享库，供多个 repo 使用


需要我帮你做成自动循环所有编号、对应 IP 和主机名的 CI 示例吗？

