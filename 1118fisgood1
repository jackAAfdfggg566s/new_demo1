在自动化 AWS FIS (Fault Injection Simulator) 使用中，如果需要动态更新 Pod 名称，并判断在指定的 namespace 下哪些 Pod 处于 ready 状态，可以通过以下步骤来实现：

### 1. 获取指定 namespace 下所有 Pod 的状态

首先，我们可以使用 `kubectl` 命令来列出指定 namespace 下所有 Pod 的信息，并筛选出 `Ready` 状态的 Pod。假设目标 namespace 为 `your-namespace`：

```bash
kubectl get pods -n your-namespace --field-selector=status.phase=Running -o=jsonpath='{.items[?(@.status.conditions[?(@.type=="Ready"&&@.status=="True")])].metadata.name}'
```

这个命令将输出在 `your-namespace` 中所有处于 `Running` 且 `Ready` 状态的 Pod 的名称。

### 2. 使用 AWS FIS 自动化执行

要在 AWS FIS 中自动执行上述操作，你需要编写一个 AWS FIS 实验模板，并在模板中使用容器或脚本来动态执行命令。以下是一个大致的思路：

- **实验模板定义**：AWS FIS 允许你通过定义实验模板，来指定故障注入的目标和类型。你可以选择 Kubernetes 集群作为目标，指定资源类型为 Pods。

- **自定义脚本**：你可以将上述的 `kubectl` 命令封装成脚本，利用 FIS 的 "run script" 或 "execute" 行为来执行。

以下是一个 AWS FIS 模板的示例，假设你已将 Kubernetes 配置好，并且在环境中安装了 `kubectl` 工具。

```json
{
  "description": "FIS Experiment to find ready pods in a namespace",
  "targets": {
    "pods": {
      "resourceType": "aws:eks:pod",
      "selectionMode": "ALL",
      "filters": {
        "namespace": "your-namespace"
      }
    }
  },
  "actions": {
    "findReadyPods": {
      "actionId": "aws:runShellScript",
      "parameters": {
        "script": "#!/bin/bash\nkubectl get pods -n your-namespace --field-selector=status.phase=Running -o=jsonpath='{.items[?(@.status.conditions[?(@.type==\"Ready\"&&@.status==\"True\")])].metadata.name}'"
      },
      "targets": {
        "pods": "pods"
      }
    }
  }
}
```

### 3. 更新 Pod 名称并执行 FIS

通过 FIS 调度该实验时，它会自动调用指定脚本，并输出在给定 namespace 下处于 Ready 状态的 Pod 名称。

### 注意事项：

- 确保 FIS 实验有足够的权限访问你的 EKS 集群，通常需要将 IAM 权限与 `eks:DescribePod` 相关联。
- 如果有多个 Kubernetes 集群或命名空间，确保脚本和权限正确配置，以便精确查询目标 Pod。
  
这个自动化流程可以帮助你在 AWS FIS 中动态查找符合条件的 Pod 名称，并执行故障注入测试。