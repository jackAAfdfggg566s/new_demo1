下面是一个简单的 Bash 脚本示例，它会循环运行 Java 程序，最多运行 10 次，并在每次运行结束后检查 Java 程序是否成功完成，只有当 Java 程序完成后才会进行下一次循环。

#!/bin/bash

# Java 程序的路径
java_program="your_java_program.jar"

# 循环次数
max_retries=10

# 计数器
counter=0

while [ $counter -lt $max_retries ]
do
  # 运行 Java 程序
  java -jar $java_program

  # 检查 Java 程序的退出状态码
  if [ $? -eq 0 ]; then
    echo "Java 程序运行成功，准备开始下一次运行..."
    counter=$((counter + 1)) # 只有在成功时才增加计数器
  else
    echo "Java 程序运行失败，重试中..."
  fi
done

echo "已完成 $max_retries 次运行"

解释：

1. 变量设置：

java_program 是你的 Java 程序的路径（替换成你自己的 .jar 文件路径）。

max_retries 是最大尝试次数，设置为 10。



2. 循环部分：

使用 while 循环，直到计数器 counter 达到最大次数。

每次循环运行 Java 程序，并根据 Java 程序的退出状态码 ($?) 判断其是否成功执行。如果退出码是 0（表示成功），则增加计数器，并开始下一次运行。如果失败，则输出错误信息并重试。



3. 退出条件：

如果 counter 达到 10，脚本会终止。




使用：

1. 将脚本保存为 run_java.sh。


2. 在终端中赋予脚本可执行权限：

chmod +x run_java.sh


3. 运行脚本：

./run_java.sh



这个脚本会确保 Java 程序在成功完成时才会进行下一轮运行，最多执行 10 次。

