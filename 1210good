要从GitLab上传文件到Nexus并让目标机器获取最新版本号，可以按照以下步骤操作：

### 步骤1: 将文件上传到Nexus

1. **在GitLab中构建文件**：
   假设你已经有一个CI/CD流程在GitLab中处理构建。通过GitLab CI，你可以将构建后的文件上传到Nexus仓库。

2. **使用curl命令上传文件**：
   假设你要上传的文件是`artifact.jar`，并且Nexus的URL是`http://nexus.example.com/repository/my-repo/`。你可以使用`curl`命令将构建的文件上传到Nexus：

   ```bash
   curl -v -u username:password --upload-file /path/to/artifact.jar \
   "http://nexus.example.com/repository/my-repo/com/example/artifact/1.0.0/artifact-1.0.0.jar"
   ```

   - `-u username:password`：提供Nexus的认证信息。
   - `--upload-file`：指定要上传的文件。
   - URL格式：`http://nexus.example.com/repository/{repository-name}/{group}/{artifact}/{version}/{artifact}-{version}.jar`。

3. **配置Nexus仓库**：
   - 在Nexus上创建一个适当的仓库（例如 Maven 仓库），用于存储上传的构件。
   - 配置访问权限和认证方式，确保GitLab CI能够通过认证上传文件。

### 步骤2: 目标机器获取最新版本号

要让目标机器获取Nexus中的最新版本号，你可以使用`curl`从Nexus API获取版本信息。

1. **Nexus的REST API获取版本信息**：
   Nexus提供了REST API来获取存储库中某个artifact的版本。可以使用`curl`来查询最新的版本。

   例如，要获取`artifact`的最新版本，可以发送一个GET请求：

   ```bash
   curl -u username:password \
   "http://nexus.example.com/service/rest/v1/search/assets?repository=my-repo&name=artifact"
   ```

   该请求将返回一个JSON响应，包含匹配的所有构件版本。

2. **解析返回的版本信息**：
   可以使用`jq`工具来提取返回的最新版本号。例如：

   ```bash
   curl -u username:password \
   "http://nexus.example.com/service/rest/v1/search/assets?repository=my-repo&name=artifact" | \
   jq -r '.items | sort_by(.version) | .[-1].version'
   ```

   - 这条命令通过`jq`解析返回的JSON，并根据版本号排序，提取最新的版本号。

3. **根据版本号下载文件**：
   一旦你得到了最新版本号，你可以使用这个版本号来下载最新的文件。例如：

   ```bash
   curl -u username:password -O \
   "http://nexus.example.com/repository/my-repo/com/example/artifact/{latest-version}/artifact-{latest-version}.jar"
   ```

   这里的`{latest-version}`可以通过上一步获取到的版本号来替换。

### 总结：
1. 使用GitLab CI构建并上传文件到Nexus。
2. 使用`curl`和Nexus的REST API来获取最新的版本号。
3. 使用获取到的版本号来下载最新的文件。

这样就可以通过`curl`实现从GitLab上传文件到Nexus，并让目标机器获取最新版本号的功能。