如果你的 Pod 里 没有 iostat，可以尝试以下方法来监控 I/O 负载：


---

1. 用 dd + time 估算 I/O 速度

time dd if=/dev/zero of=/tmp/testfile bs=1M count=1000 oflag=direct

它会输出执行时间：

real    0m3.217s
user    0m0.002s
sys     0m0.873s

real 时间越长，说明磁盘 I/O 负载越高

如果 sys 很高，说明 I/O 操作频繁



---

2. 直接读取 /proc/diskstats

即使没有 iostat，你仍然可以手动查看 I/O 负载：

cat /proc/diskstats

然后运行：

dd if=/dev/zero of=/tmp/testfile bs=1M count=1000 oflag=direct
cat /proc/diskstats

对比 reads_completed 和 writes_completed 的变化，看看 I/O 是否增加。


---

3. 安装 sysstat 以获取 iostat（如果你的 Pod 支持 apk 或 dnf）

Alpine Linux (如果 apk 可用)：

apk add sysstat

Amazon Linux / RHEL (如果 dnf 可用)：

dnf install sysstat -y

然后运行：

iostat -xm 2

> 如果 Pod 没有包管理器，可能是基于 BusyBox 或 Distroless 镜像，这种情况下只能用 /proc/diskstats。




---

4. 用 while true 让 I/O 负载持续

如果你要让磁盘一直保持 90% 负载：

while true; do dd if=/dev/zero of=/tmp/testfile bs=1M count=500 oflag=direct; done &

然后再用 /proc/diskstats 查看负载变化。


---

总结

如果没有 iostat，用：

time dd 估算 I/O 负载

cat /proc/diskstats 监控 I/O 变化


如果 Pod 支持 apk 或 dnf，可以尝试安装 sysstat

如果需要高负载，运行 while true 让 dd 持续写入


你的 Pod 运行的是什么系统？如果 cat /etc/os-release 可用，发一下结果，我看看有没有办法安装 iostat！

